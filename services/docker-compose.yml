version: "3"
services:
  obs-nginx:
    container_name: obs-nginx
    restart: always
    build: ../nginx_proxy
    ports:
      - 80:80
    networks:
      - obs-network

  obs-redis:
    container_name: obs-redis
    image: redis
    expose:
      - 6379
    networks:
      - obs-network
    restart: on-failure

  obs-auth:
    container_name: obs-auth
    restart: always
    build: ./auth
    expose:
      - 1000
    networks:
      - obs-network
    restart: on-failure

  obs-core:
    container_name: obs-core
    restart: always
    build: ./core
    expose:
      - 2000
    depends_on:
      - obs-redis
      - obs-auth
    networks:
      - obs-network
    restart: on-failure

  obs-cron:
    container_name: obs-cron
    restart: always
    build: ./cron
    expose:
      - 3000
    depends_on:
      - obs-core
    networks:
      - obs-network
    restart: on-failure

  obs-fallback:
    container_name: obs-fallback
    restart: always
    build: ./fallback
    expose:
      - 4000
    depends_on:
      - obs-core
    networks:
      - obs-network
    restart: on-failure

  obs-playlist:
    container_name: obs-playlist
    restart: always
    build: ./playlist
    expose:
      - 5000
    depends_on:
      - obs-core
    networks:
      - obs-network
    restart: on-failure

  obs-scrapper:
    container_name: obs-scrapper
    restart: always
    build: ./scrapper
    expose:
      - 6000
    depends_on:
      - obs-core
    networks:
      - obs-network
    restart: on-failure

  obs-clientapp:
    container_name: obs-clientapp
    restart: always
    build: ./clientapp
    expose:
      - 7000
    networks:
      - obs-network
    restart: on-failure

  obs-captainapp:
    container_name: obs-captainapp
    restart: always
    build: ./captainapp
    expose:
      - 8000
    networks:
      - obs-network
    restart: on-failure


networks:
  obs-network:
